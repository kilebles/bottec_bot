services:
  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/log:/var/log/nginx
      - ./staticfiles:/app/staticfiles
    depends_on:
      - bottec_bot
      - django_admin

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew; done'"

  bottec_bot:
    build: .
    container_name: bottec_bot
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    command: >
      uvicorn app.bottec_bot.main:app
      --host 0.0.0.0
      --port 8080
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      - postgres

  postgres:
    image: postgres:15
    container_name: pg_bottec
    restart: always
    ports:
      - "5423:5432"
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data

  migrate:
    build: .
    container_name: bottec_migrations
    command: alembic upgrade head
    depends_on:
      - postgres
    env_file:
      - .env
    volumes:
      - .:/app

  django_admin:
    build: .
    container_name: django_admin
    command: >
      python app/admin/manage.py runserver 0.0.0.0:8001
    ports:
      - "8001:8001"
    env_file:
      - .env
    volumes:
      - .:/app
      - ./staticfiles:/app/staticfiles
    depends_on:
      - postgres

volumes:
  pgdata: